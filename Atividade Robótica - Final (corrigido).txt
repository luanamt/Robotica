MODULE Module1
	CONST robtarget p10:=[[855.65,-39.74,681.32],[0.156987,0.0229146,0.987328,-0.00364346],[-1,0,0,0],[9E+9,9E+9,9E+9,9E+9,9E+9,9E+9]];
    !***********************************************************
    !
    ! Module:  Module1
    !
    ! Description:
    !   <Insert description here>
    !
    ! Author: Alex
    !
    ! Version: 1.0
    !
    !***********************************************************
    
    
    !***********************************************************
    !
    ! Procedure main
    !
    !   This is the entry point of your program
    !
    !***********************************************************
    PROC main()
      
       
        VAR num desenho;
        VAR num aresta; 
        VAR num a2;
        VAR num quantidade; 
        VAR num repeticao := 1;
        VAR num d ;
        VAR num y ;
        VAR num y2;
        VAR clock clock1;
        VAR num tempo;
       
        
        ClkStart clock1;
        ! inicio do laço, enquanto a resposta for sim = 1, logo o laço continuara.    
        
        WHILE repeticao = 1 DO      
            
        ! escolha de desenho, quadrado = 1, triangulo = 2 e circulo = 3
        
        TPReadFK desenho, "Escolha o desenho", "Quadrado", "Triângulo equilátero", "Círculo", stEmpty, stEmpty;
        
! Caso for quadrado      
        IF desenho = 1 THEN 
            
! Pergunta qual os valores para aresta e quantidade de quadrados a ser desenhados, dando um limite para ambos

            TPReadnum aresta, "Insira o tamanho da aresta";       
            TPReadNum quantidade, "Quantos quadrados?";
                    
! codigo para desenhar o quadrado

            FOR i FROM 1 TO quantidade DO 
                
            MoveL Offs(p10,d,y,20), v50, fine, tool0;
            MoveL Offs(p10,d,y,0), v50, fine, tool0;
            MoveL Offs(p10,d,aresta+y,0), v50, fine, tool0;
            MoveL Offs(p10,aresta+d,aresta+y,0), v50, fine, tool0;
            MoveL Offs(p10,aresta+d,y,0), v50, fine, tool0;
            MoveL Offs(p10,d,y,0), v50, fine, tool0;
            MoveL Offs(p10,d,y,20), v50, fine, tool0;
            d := d + 10 + aresta ;
           
            ENDFOR
            
!Caso for triangulo              

        ELSEIF desenho = 2 THEN 
            
            ! primeiro pergunta qual a aresta, depois a quantidade, por meio de um laço limitar o valor inserido.
            
            TPReadNum aresta, "Insira o tamanho da aresta do triângulo.";
            TPReadNum quantidade, "Quantos triângulos?";
            
            
! código para desenhar o triangulo

            FOR i FROM 1 TO quantidade DO
     
            MoveL Offs(p10,d,y,20), v50, fine, tool0;
            MoveL Offs(p10,d,y,0), v50, fine, tool0;
            MoveL Offs(p10,d,aresta+y,0), v50, fine, tool0;
            MoveL Offs(p10,((aresta/2)*1.73205)+d,(aresta/2)+y,0), v50, fine, tool0;
            MoveL Offs(p10,d,y,0), v50, fine, tool0;
            MoveL Offs(p10,d,y,20), v50, fine, tool0;
            
            d := d + 10 + ((aresta/2)*1.73205);
            
            ENDFOR
                      
        
 !Caso for circulo          
        ELSE
            
! como nos anteriores, primeiro fazer a pergunta para definir diametro e quantidade, ambos com limite
            TPReadNum a2, "Insira o diâmetro do círculo.";
            TPReadNum quantidade, "Quantos círculos?";
            
!codigo para desenhar o círculo
            y2 := y + a2/2;

            FOR i FROM 1 TO quantidade DO
                
                
              
            MoveL Offs(p10, d , y2 , 20), v50, fine, tool0;
            MoveL Offs(p10, d , y2 , 0 ), v50, fine, tool0;
            MoveC Offs(p10, d+(a2/2) , (a2/2)+y2 , 0), Offs(p10, a2+d , y2 , 0), v50, z1, tool0;
            MoveC Offs(p10, (a2/2)+d , -(a2/2)+y2 , 0), Offs(p10, d , y2, 0), v50, z1, tool0;
            MoveL Offs(p10, d , y2 , 20), v50, fine, tool0;
            
            
            d := d + a2 + 10;
            
            ENDFOR 
         
            
        ENDIF 
        
! aqui reseta a posição de x para o próximo desenho

        d := 0;
        
! abaixo posiciona o próximo desenho em y
        
        y := y + aresta + 10 ;
       
! abaixo pergunta se deseja ou nao fzer outro desenho, caso nao = 2, saindo do laço
        
        TPReadFK repeticao, "Deseja desenhar novamente?", "Sim", "Não", stEmpty, stEmpty, stEmpty;
            
        ENDWHILE 
        
! caso nao, repetiçao = 2, fazendo terminar a contagem, exibindo o mesmo.
        
        IF repeticao = 2 THEN
            ClkStop clock1;
        ENDIF 
        
        tempo := ClkRead (clock1);
        
        TPWrite "O tempo de execução foi de :" \Num:=tempo;
        
    ENDPROC
ENDMODULE